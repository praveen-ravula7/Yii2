name: Deploy Yii2 Application

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./docker/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/yii2-app:latest,${{ secrets.DOCKER_USERNAME }}/yii2-app:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/yii2-app:latest
        cache-to: type=inline
        
    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
      
    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/yii2-app:${{ github.sha }}
        STACK_NAME: yii2app
      run: |
        ssh $EC2_USER@$EC2_HOST "docker service update --image $DOCKER_IMAGE ${STACK_NAME}_app"
        
    - name: Verify deployment
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        ssh $EC2_USER@$EC2_HOST "docker service ls | grep yii2app_app"
        
    - name: Rollback on failure
      if: failure()
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/yii2-app:latest
        STACK_NAME: yii2app
      run: |
        ssh $EC2_USER@$EC2_HOST "docker service update --image $DOCKER_IMAGE ${STACK_NAME}_app || docker stack deploy -c /opt/yii2-docker-swarm/docker-compose.yml $STACK_NAME"
